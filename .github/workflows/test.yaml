name: Test

on: [push]

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  coverage:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-base

      - name: Get contract addresses
        run: 'parallel --lb --halt now,success=1,fail=1 ::: \
          "pnpm tenv start --no-ensnode --no-scripts --no-build --exit-after-deploy --verbosity 1" \
          "pnpm wait-on ./.env.local"'

      - run: pnpm test:coverage

  build-stateless:
    # skip this job
    if: false
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-base

      - name: Get contract addresses
        run: 'parallel --lb --halt now,success=1,fail=1 ::: \
          "pnpm tenv start --no-ensnode --no-scripts --no-build --exit-after-deploy --verbosity 1" \
          "pnpm wait-on ./.env.local"'

      - name: Build stateless and export
        run: pnpm build:glocal && pnpm export

      - name: Tar stateless files
        run: tar -cvf stateless-build.tar out

      - name: Upload stateless
        uses: actions/upload-artifact@v4
        with:
          name: stateless-build
          path: stateless-build.tar

  build-stateful:
    # skip this job
    if: false
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-base

      - name: Build stateful and export
        run: |
          export NEXT_PUBLIC_CHAIN_NAME=sepolia
          pnpm build && pnpm export

      - name: Tar stateful files
        run: tar -cvf stateful-build.tar out

      - name: Upload stateful
        uses: actions/upload-artifact@v4
        with:
          name: stateful-build
          path: stateful-build.tar

  stateless:
    # skip this job
    if: false
    name: stateless (${{matrix.shard}})
    needs: build-stateless
    timeout-minutes: 20
    runs-on: blacksmith-4vcpu-ubuntu-2404
    strategy:
      matrix:
        shard:
          [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
          ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-base

      - name: Install Playwright
        run: pnpm exec playwright install --with-deps chromium

      - run: pnpm rebuild -r

      - name: Download build
        id: download
        uses: actions/download-artifact@v4
        with:
          name: stateless-build
          merge-multiple: true

      - name: Untar files
        run: tar -xvf stateless-build.tar

      - name: Run tests
        run: |
          PLAYWRIGHT_SHARD=${{matrix.shard}} PLAYWRIGHT_TOTAL=${{strategy.job-total}} pnpm e2e:ci --no-build

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: stateless-report-${{matrix.shard}}
          path: playwright-report/
          retention-days: 30
          overwrite: true

  stateful:
    # skip this job
    if: false
    name: stateful (${{matrix.shard}})
    needs: build-stateful
    timeout-minutes: 10
    runs-on: blacksmith-4vcpu-ubuntu-2404
    strategy:
      matrix:
        shard: [1, 2, 3]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-base

      - name: Install Playwright
        run: pnpm exec playwright install --with-deps chromium

      - run: pnpm rebuild -r

      - name: Download build
        id: download
        uses: actions/download-artifact@v4
        with:
          name: stateful-build

      - name: Untar files
        run: tar -xvf stateful-build.tar

      - name: Run tests
        run: |
          parallel --lb --halt now,success=1,fail=1 ::: \
          "pnpm wrangle:dev:https" \
          "pnpm wait-on https://127.0.0.1:8788 && npx playwright test --shard=${{matrix.shard}}/${{strategy.job-total}} --project=stateful"
        env:
          SECRET_WORDS: ${{ secrets.SECRET_WORDS }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: stateful-report-${{matrix.shard}}
          path: playwright-report/
          retention-days: 30

  wallets:
    name: wallets (headed)
    timeout-minutes: 15
    # Use more powerful instance for browser automation with MetaMask
    # Options:
    # - blacksmith-8vcpu-ubuntu-2404 (8 vCPUs)
    # - blacksmith-16vcpu-ubuntu-2404 (16 vCPUs)
    # - ubuntu-latest-8-cores (GitHub hosted)
    # - ubuntu-latest-16-cores (GitHub hosted)
    runs-on: blacksmith-8vcpu-ubuntu-2404
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-base

      - name: Setup virtual display
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1280x720x24 > /dev/null 2>&1 &

      - name: Setup Playwright for wallet tests
        run: |
          echo "Cleaning Playwright cache..."
          rm -rf ~/.cache/ms-playwright || true

          # echo "Installing system dependencies using Playwright..."
          # # Let Playwright handle system dependencies first
          # pnpm exec playwright install-deps chromium || true

          echo "Installing Playwright browsers and dependencies..."
          pnpm exec playwright install chromium

          echo "Verifying installation..."
          pnpm exec playwright --version

          # Double-check the chromium executable exists
          CHROMIUM_PATH=$(find ~/.cache/ms-playwright -name "chrome" -type f 2>/dev/null | head -1)
          if [ -z "$CHROMIUM_PATH" ]; then
            echo "ERROR: Chromium executable not found after installation!"
            echo "Attempting force reinstall..."
            pnpm exec playwright install --force chromium
          else
            echo "âœ… Chromium found at: $CHROMIUM_PATH"
            ls -la "$CHROMIUM_PATH"
          fi

      # - name: Rebuild native dependencies
      #   run: pnpm rebuild -r

      - name: Run wallet tests
        run: |
          parallel --lb --halt now,success=1,fail=1 ::: \
          "pnpm dev" \
          "pnpm wait-on http://localhost:3000 && DISPLAY=:99 pnpm e2e:wallet --headed"
        env:
          SECRET_WORDS: ${{ secrets.SECRET_WORDS }}
          DISPLAY: :99

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: wallets-report
          path: playwright-report/
          retention-days: 30
